{"version":3,"sources":["providers/MovieProvider.tsx","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MoviesContext","createContext","movies","addMovie","useMovies","useContext","MoviesProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","setMovies","_jsx","Provider","value","movie","concat","_toConsumableArray","MovieCard","_jsxs","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","map","imdbId","FindMovie","_useMovies","movieFromServer","setMovieFromServer","_useState3","_useState4","query","setQuery","_useState5","_useState6","error","setError","_useState7","_useState8","isLoading","setIsLoading","_Fragment","htmlFor","type","id","placeholder","onChange","event","target","cn","onClick","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","response","Title","Plot","Poster","imdbID","finally","disabled","undefined","find","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f759448.chunk.js","sourcesContent":["import React, {\n  FC, createContext, useContext, useState,\n} from 'react';\nimport { Movie } from '../types/Movie';\n\ntype Props = {\n  children: React.ReactNode\n};\n\ntype ContextType = {\n  movies: Movie[];\n  addMovie: (movie: Movie) => void;\n};\n\nexport const MoviesContext = createContext<ContextType>({\n  movies: [],\n  addMovie: () => undefined,\n});\n\nexport const useMovies = () => useContext(MoviesContext);\n\nexport const MoviesProvider: FC<Props> = ({ children }) => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies(\n      [...movies, movie],\n    );\n  };\n\n  return (\n    <MoviesContext.Provider value={{ movies, addMovie }}>\n      {children}\n    </MoviesContext.Provider>\n  );\n};\n","import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { useMovies } from '../../providers/MovieProvider';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList: React.FC = () => {\n  const { movies } = useMovies();\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbId}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { useMovies } from '../../providers/MovieProvider';\nimport { MovieCard } from '../MovieCard';\nimport { ResponseError } from '../../types/ReponseError';\n\nconst DEFAULT_PICTURE\n  = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const FindMovie: React.FC = () => {\n  const { addMovie, movies } = useMovies();\n  const [movieFromServer, setMovieFromServer] = useState<Movie | null>(null);\n  const [query, setQuery] = useState<string>('');\n  const [error, setError] = useState<ResponseError | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setError(null);\n  };\n\n  const handleFindMovieButton = (\n    event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    event.preventDefault();\n\n    setIsLoading(true);\n    getMovie(query)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .then((response: any) => {\n        if (response.Response === 'False') {\n          setError(response);\n\n          return;\n        }\n\n        setMovieFromServer({\n          title: response.Title,\n          description: response.Plot,\n          imgUrl: response.Poster === 'N/A' ? DEFAULT_PICTURE : response.Poster,\n          imdbId: response.imdbID,\n          imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n        });\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleAddMovie = () => {\n    if (movieFromServer && movies.find((movie) => (\n      movie.imdbId === movieFromServer.imdbId)) === undefined\n    ) {\n      addMovie(movieFromServer);\n    }\n\n    setMovieFromServer(null);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={query}\n              onChange={handleInputChange}\n              className={cn('input', { '': 'error' })}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', { 'is-loading': isLoading })}\n              onClick={handleFindMovieButton}\n              disabled={query === ''}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          { movieFromServer && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      { movieFromServer && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movieFromServer} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=996a7cf0';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { MoviesProvider } from './providers/MovieProvider';\n\nexport const App = () => {\n  // const [movies] = useState<Movie[]>([]);\n\n  return (\n    <MoviesProvider>\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList />\n        </div>\n\n        <div className=\"sidebar\">\n          <FindMovie />\n        </div>\n      </div>\n    </MoviesProvider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}